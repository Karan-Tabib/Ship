// <auto-generated />
using System;
using DataLayer.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ShipManagemntDbContext))]
    [Migration("20250204132052_InitalDBCreate")]
    partial class InitalDBCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Entities.BoatInformation", b =>
                {
                    b.Property<int>("BoatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoatId"));

                    b.Property<string>("BoatName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BoatType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BoatId");

                    b.HasIndex("UserId");

                    b.ToTable("BoatInformation", (string)null);

                    b.HasData(
                        new
                        {
                            BoatId = 1,
                            BoatName = "Bhagwati",
                            BoatType = "Daldi",
                            UserId = 3
                        },
                        new
                        {
                            BoatId = 2,
                            BoatName = "Dhanlaxmi",
                            BoatType = "Trawler",
                            UserId = 3
                        },
                        new
                        {
                            BoatId = 3,
                            BoatName = "dwarkashish",
                            BoatType = "Trawler",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.CrewInformation", b =>
                {
                    b.Property<int>("CrewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CrewID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AdharNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("BoatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CrewID");

                    b.HasIndex("BoatId");

                    b.ToTable("CrewInformation", (string)null);

                    b.HasData(
                        new
                        {
                            CrewID = 1,
                            Address = "Paj",
                            AdharNo = "1234567899876543",
                            BoatId = 1,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Harishchandra",
                            Gender = 0,
                            Lastname = "Pawase",
                            Middlename = "rama",
                            Phone = "9082716352"
                        },
                        new
                        {
                            CrewID = 2,
                            Address = "Paj",
                            AdharNo = "1334567899876543",
                            BoatId = 1,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Manoj",
                            Gender = 0,
                            Lastname = "Choagle",
                            Middlename = "shankar",
                            Phone = "9082716353"
                        },
                        new
                        {
                            CrewID = 3,
                            Address = "Paj",
                            AdharNo = "1434567899876543",
                            BoatId = 1,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Vaman",
                            Gender = 0,
                            Lastname = "Pawase",
                            Middlename = "shiva",
                            Phone = "9082716354"
                        },
                        new
                        {
                            CrewID = 4,
                            Address = "Paj",
                            AdharNo = "1534567899876543",
                            BoatId = 1,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Kashinath",
                            Gender = 0,
                            Lastname = "Tabib",
                            Middlename = "Maya",
                            Phone = "9082716355"
                        },
                        new
                        {
                            CrewID = 5,
                            Address = "Paj",
                            AdharNo = "1634567899876543",
                            BoatId = 1,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Ganesh",
                            Gender = 0,
                            Lastname = "Palekar",
                            Middlename = "Eknath",
                            Phone = "9082716356"
                        },
                        new
                        {
                            CrewID = 6,
                            Address = "Paj",
                            AdharNo = "1734567899876543",
                            BoatId = 1,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Darshan",
                            Gender = 0,
                            Lastname = "Tabib",
                            Middlename = "Ramesh",
                            Phone = "9082716357"
                        },
                        new
                        {
                            CrewID = 7,
                            Address = "Paj",
                            AdharNo = "1834567899876543",
                            BoatId = 1,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Amol",
                            Gender = 0,
                            Lastname = "Tabib",
                            Middlename = "Ramesh",
                            Phone = "9082716358"
                        },
                        new
                        {
                            CrewID = 8,
                            Address = "Paj",
                            AdharNo = "1934567899876543",
                            BoatId = 1,
                            DOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Navnath",
                            Gender = 0,
                            Lastname = "Tabib",
                            Middlename = "Ramesh",
                            Phone = "9082716359"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.FishInformation", b =>
                {
                    b.Property<int>("FishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FishId"));

                    b.Property<string>("FishName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("FishId");

                    b.ToTable("FishInformation", (string)null);

                    b.HasData(
                        new
                        {
                            FishId = 1,
                            FishName = "Promplet"
                        },
                        new
                        {
                            FishId = 2,
                            FishName = "Halwa"
                        },
                        new
                        {
                            FishId = 3,
                            FishName = "Surmai"
                        },
                        new
                        {
                            FishId = 4,
                            FishName = "Tuna"
                        },
                        new
                        {
                            FishId = 5,
                            FishName = "Pronze"
                        },
                        new
                        {
                            FishId = 6,
                            FishName = "Ribben"
                        },
                        new
                        {
                            FishId = 7,
                            FishName = "White"
                        },
                        new
                        {
                            FishId = 8,
                            FishName = "Lobster"
                        },
                        new
                        {
                            FishId = 9,
                            FishName = "Bangada"
                        },
                        new
                        {
                            FishId = 10,
                            FishName = "Bombil"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.LeaveInformation", b =>
                {
                    b.Property<int>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveId"));

                    b.Property<int>("CrewId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ForYear")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalLeaves")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.HasKey("LeaveId");

                    b.HasIndex("CrewId")
                        .IsUnique();

                    b.ToTable("LeaveInformation", (string)null);
                });

            modelBuilder.Entity("DataLayer.Entities.LeaveSummary", b =>
                {
                    b.Property<int>("LeaveSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveSummaryId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrewId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfDaysOff")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaveSummaryId");

                    b.HasIndex("CrewId");

                    b.HasIndex("LeaveId");

                    b.ToTable("LeaveSummary", (string)null);
                });

            modelBuilder.Entity("DataLayer.Entities.SalaryInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CrewId")
                        .HasColumnType("int");

                    b.Property<int>("ForYear")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<decimal>("TotalSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CrewId")
                        .IsUnique();

                    b.ToTable("SalaryInformation", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CrewId = 1,
                            ForYear = 2024,
                            TotalSalary = 200000m,
                            endDate = new DateTime(2026, 2, 4, 18, 50, 51, 649, DateTimeKind.Local),
                            startDate = new DateTime(2025, 2, 4, 18, 50, 51, 648, DateTimeKind.Local).AddTicks(9981)
                        },
                        new
                        {
                            Id = 2,
                            CrewId = 2,
                            ForYear = 2024,
                            TotalSalary = 220000m,
                            endDate = new DateTime(2026, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(19),
                            startDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(18)
                        },
                        new
                        {
                            Id = 3,
                            CrewId = 3,
                            ForYear = 2024,
                            TotalSalary = 240000m,
                            endDate = new DateTime(2026, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(23),
                            startDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(22)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.SalarySummary", b =>
                {
                    b.Property<int>("SalarySummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalarySummaryId"));

                    b.Property<decimal>("AmountTaken")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CrewId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SalarySummaryId");

                    b.HasIndex("CrewId");

                    b.HasIndex("SalaryId");

                    b.ToTable("SalarySummary", (string)null);
                });

            modelBuilder.Entity("DataLayer.Entities.SupplierInformation", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SupplierId");

                    b.ToTable("SupplierInformation", (string)null);

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Address = "Harnai",
                            Email = "abczyx@gmail.com",
                            Firstname = "ABC",
                            Lastname = "XYZ",
                            Middlename = "PQR",
                            Phone = "8478523693"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.TripExpenditure", b =>
                {
                    b.Property<int>("TripExpenditureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripExpenditureId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("TripDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TripExpenditureId");

                    b.HasIndex("TripId");

                    b.ToTable("TripExpenditures");
                });

            modelBuilder.Entity("DataLayer.Entities.TripInformation", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<int>("BoatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TripDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("TripEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TripName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TripStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TripId");

                    b.HasIndex("BoatId");

                    b.ToTable("TripInformation", (string)null);

                    b.HasData(
                        new
                        {
                            TripId = 1,
                            BoatId = 1,
                            CreatedDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8678),
                            TripDescription = "First Trip",
                            TripEndDate = new DateTime(2025, 2, 11, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8669),
                            TripName = "First Trip",
                            TripStartDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8663),
                            UpdatedDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8679)
                        },
                        new
                        {
                            TripId = 2,
                            BoatId = 1,
                            CreatedDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8687),
                            TripDescription = "Second Trip",
                            TripEndDate = new DateTime(2025, 2, 11, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8685),
                            TripName = "Second Trip",
                            TripStartDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8684),
                            UpdatedDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8687)
                        },
                        new
                        {
                            TripId = 3,
                            BoatId = 1,
                            CreatedDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8691),
                            TripDescription = "Third Trip",
                            TripEndDate = new DateTime(2025, 2, 11, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8689),
                            TripName = "Third Trip",
                            TripStartDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8689),
                            UpdatedDate = new DateTime(2025, 2, 4, 18, 50, 51, 649, DateTimeKind.Local).AddTicks(8691)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.TripParticular", b =>
                {
                    b.Property<int>("TripParticularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripParticularId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FishId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<decimal>("RatePerKg")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("TripDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TripParticularId");

                    b.HasIndex("TripId");

                    b.ToTable("TripParticulars");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("UserId");

                    b.ToTable("UserDefinition", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Pune",
                            Email = "Karan@gmail.com",
                            Firstname = "Karan",
                            Lastname = "Tabib",
                            Middlename = "Bhagwan",
                            Password = "1234",
                            Phone = "123456789"
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Pune",
                            Email = "Sagar@gmail.com",
                            Firstname = "Sagar",
                            Lastname = "Tabib",
                            Middlename = "Bhagwan",
                            Password = "4321",
                            Phone = "123456789"
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Pune",
                            Email = "Arvind@gmail.com",
                            Firstname = "Arvind",
                            Lastname = "Tabib",
                            Middlename = "Bhagwan",
                            Password = "7895",
                            Phone = "123456789"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.BoatInformation", b =>
                {
                    b.HasOne("DataLayer.Entities.User", "UserInfo")
                        .WithMany("Boats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("DataLayer.Entities.CrewInformation", b =>
                {
                    b.HasOne("DataLayer.Entities.BoatInformation", "Boat")
                        .WithMany("CrewMembers")
                        .HasForeignKey("BoatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");
                });

            modelBuilder.Entity("DataLayer.Entities.LeaveInformation", b =>
                {
                    b.HasOne("DataLayer.Entities.CrewInformation", "crewInfo")
                        .WithOne("LeaveInfo")
                        .HasForeignKey("DataLayer.Entities.LeaveInformation", "CrewId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("crewInfo");
                });

            modelBuilder.Entity("DataLayer.Entities.LeaveSummary", b =>
                {
                    b.HasOne("DataLayer.Entities.CrewInformation", "Crew")
                        .WithMany("LeaveSummaries")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.LeaveInformation", "LeavesInforms")
                        .WithMany("LeaveSummaries")
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crew");

                    b.Navigation("LeavesInforms");
                });

            modelBuilder.Entity("DataLayer.Entities.SalaryInformation", b =>
                {
                    b.HasOne("DataLayer.Entities.CrewInformation", "CrewInfos")
                        .WithOne("SalaryInfo")
                        .HasForeignKey("DataLayer.Entities.SalaryInformation", "CrewId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CrewInfos");
                });

            modelBuilder.Entity("DataLayer.Entities.SalarySummary", b =>
                {
                    b.HasOne("DataLayer.Entities.CrewInformation", "Crew")
                        .WithMany("SalarySummaries")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.SalaryInformation", "Salaries")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Crew");

                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("DataLayer.Entities.TripExpenditure", b =>
                {
                    b.HasOne("DataLayer.Entities.TripInformation", "TripInfo")
                        .WithMany("TripExpenditures")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripInfo");
                });

            modelBuilder.Entity("DataLayer.Entities.TripInformation", b =>
                {
                    b.HasOne("DataLayer.Entities.BoatInformation", "Boat")
                        .WithMany("TripInfos")
                        .HasForeignKey("BoatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");
                });

            modelBuilder.Entity("DataLayer.Entities.TripParticular", b =>
                {
                    b.HasOne("DataLayer.Entities.TripInformation", "TripInfo")
                        .WithMany("TripParticulars")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripInfo");
                });

            modelBuilder.Entity("DataLayer.Entities.BoatInformation", b =>
                {
                    b.Navigation("CrewMembers");

                    b.Navigation("TripInfos");
                });

            modelBuilder.Entity("DataLayer.Entities.CrewInformation", b =>
                {
                    b.Navigation("LeaveInfo");

                    b.Navigation("LeaveSummaries");

                    b.Navigation("SalaryInfo");

                    b.Navigation("SalarySummaries");
                });

            modelBuilder.Entity("DataLayer.Entities.LeaveInformation", b =>
                {
                    b.Navigation("LeaveSummaries");
                });

            modelBuilder.Entity("DataLayer.Entities.TripInformation", b =>
                {
                    b.Navigation("TripExpenditures");

                    b.Navigation("TripParticulars");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Navigation("Boats");
                });
#pragma warning restore 612, 618
        }
    }
}
